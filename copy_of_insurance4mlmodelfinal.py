# -*- coding: utf-8 -*-
"""Copy of Insurance4MLModelFinal.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vselNLrVMkrv2p8-gOuvJUHWNP_Mxest

#**Load Data**
"""



import pandas as pd

df = pd.read_csv('/content/final 2.csv')
df

df = df[["Customer_Id","Age", "Income_Level", "Claim_History", "Credit_Score", "RiskFinal"]]
df

df.corr()["RiskFinal"]

import seaborn as sns
sns.lmplot(x='Credit_Score',y='RiskFinal',data=df,fit_reg=True, ci=None)

sns.lmplot(x='Income_Level',y='RiskFinal',data=df,fit_reg=True, ci=None)

sns.lmplot(x='Claim_History',y='RiskFinal',data=df,fit_reg=True, ci=None)

sns.lmplot(x='Age',y='RiskFinal',data=df,fit_reg=True, ci=None)

df.plot.hist(y="RiskFinal")

df[df.isnull().any(axis=1)].head(20)

"""Process of data cleaning to be added here"""

train = df[df["Customer_Id"] < 52801].copy()
test = df[df["Customer_Id"] >= 52801].copy()

train.shape

test.shape

from sklearn.linear_model import LinearRegression

reg = LinearRegression()
predictors = ["Age", "Income_Level","Claim_History","Credit_Score"]
target = "RiskFinal"
reg.fit(train[predictors], train["RiskFinal"])

predictions = reg.predict(test[predictors])
test["predictions"] = predictions
test

test.loc[test["predictions"] > 3, "predictions"] = 3
test.loc[test["predictions"] < 1, "predictions"] = 1

test["predictions"] = test["predictions"].round()
test

from sklearn.metrics import mean_absolute_error

error = mean_absolute_error(test["RiskFinal"], test["predictions"])
error

df.describe()["RiskFinal"]

test[test["Customer_Id"] == 61601]

test[test["Customer_Id"] == 52803]

errors = (test["RiskFinal"] - test["predictions"]).abs()
errors

error_by_customerid = errors.groupby(test["Customer_Id"]).mean()
error_by_customerid

riskfinal_by_customerid = test["RiskFinal"].groupby(test["Customer_Id"]).mean()
error_ratio =  error_by_customerid / riskfinal_by_customerid
error_ratio

error_ratio[~pd.isnull(error_ratio)]

import numpy as np
error_ratio = error_ratio[np.isfinite(error_ratio)]
error_ratio

error_ratio.plot.hist()

error_ratio.sort_values()

import pandas as pd
from sklearn.linear_model import LinearRegression
import pickle

# Step 1: Read Data from CSV using pandas
data = pd.read_csv("/content/final 2.csv")

# Assuming 'data.csv' has columns 'Income_Level' and 'RiskFinal'
X = data[["Age", "Income_Level","Claim_History","Credit_Score"]]  # Features
y = data["RiskFinal"]       # Target variable

# Step 2: Train a Machine Learning Model
model = LinearRegression()
model.fit(X, y)

# Step 3: Serialize the Model and Save it to a File
with open('linear_regression_model.pkl', 'wb') as file:
    pickle.dump(model, file)

print("Model saved to 'linear_regression_model.pkl'")

# Step 4: Load the Model from the File
with open('linear_regression_model.pkl', 'rb') as file:
    loaded_model = pickle.load(file)

print("Model loaded from 'linear_regression_model.pkl'")

# Step 5: Make Predictions with the Loaded Model
predictions = loaded_model.predict(X)
print("Predictions:", predictions)